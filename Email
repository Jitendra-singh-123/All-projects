#Name : Jitendra Singh
#Section : G
#University Roll number : 2014407
#Mini-Project : voice based mail

import datetime
import smtplib #The smtplib is a Python library for sending emails using the Simple Mail Transfer Protocol (SMTP).
import speech_recognition as sr #recogonize voice
import pyttsx3 #pyttsx3 is a text-to-speech conversion library in Python.
from email.message import EmailMessage # EmailMessage provides the core functionality for setting and querying header fields, for accessing message bodies, and for creating or modifying structured messages
#listener store the voice whatever we speak
listener = sr.Recognizer()
#intializing pyttsx3
engine_start = pyttsx3.init()
voices = engine_start.getProperty('voices')
engine_start.setProperty('voice', voices[1].id)


def speak(text):
    #it will go to engine and say the text
    engine_start.say(text)
    #execute and wait
    engine_start.runAndWait()

def wishMe():
    hour = int(datetime.datetime.now().hour)
    if hour >= 0 and hour < 12:
        speak("Good Morning!")


    elif hour >= 12 and hour < 18:
        speak("Good Afternoon!")

    else:
        speak("Good Evening!")

    speak("I am alexa Sir I am your email assitant")


def take_information():
    try:
        # we are taking microphone to take voice and giving it as small name as source
        with sr.Microphone() as source:
            print('listening........')
            #listener will listen from the source and store it in voice variable
            voice = listener.listen(source)
            #Here the information given by the user coverting audio to text by the help of google API
            information = listener.recognize_google(voice)
            print(information)
            return information.lower()
    except:
        pass


def sending_mail(receiver, subject_of_mail, message):
    #creating server (server name,port number)
    server = smtplib.SMTP('smtp.gmail.com', 587)
    #we are saying to the server thar you can trust me starttls===> transport layer security
    server.starttls()
    # Make sure to give app access in your Gmail account
    #logging to the gmail account
    server.login('vickysingh31561@gmail.com','vickysingh12345')
    email = EmailMessage()
    email['From'] = 'vickysingh31561@gmail.com'
    email['To'] = receiver
    email['Subject'] = subject_of_mail
    #set the content of email i.e.body
    email.set_content(message)
    #server will send the email
    server.send_message(email)

#we use dictionary so that when we will say name it just takes email id on the basis of key value pair
email_dictionary = {
    'david': 'www.vickysingh31561@gmail.com',
    'akon': 'akon234@gmail.com',
    'ajay': 'ajay456@gmail.com',
    'jyoti': 'jyoti231@gmail1.com',
    'irene': 'irene@redvelvet.com'
    # and many more
}

#it will talk to us
def getting_mail_information():
    speak('Whom you want to send email?')

    #it will take the name and searches the name in email list and return value i.e, email id
    try:
        key = take_information()
        value = email_dictionary[key]
    except:
        speak("sorry sir name is not found")
        return 0
    print(value)
    speak('Tell me the subject of your email?')

    subject_of_mail = take_information()
    speak('Tell me the text in your email')
    message = take_information()
    sending_mail(value, subject_of_mail, message)
    speak('Sir Your email is sent succesfully')


wishMe()
getting_mail_information()
